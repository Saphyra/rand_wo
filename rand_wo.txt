=== DOCUMENTATION ===

Domains
    - Items
        - <UUID> itemId

    - Key
        - <UUID> keyId
        - <String> keyValue

    - Label
        - <UUID> labelId
        - <String> labelValue

    - ItemLabelMapping
        - <UUID> mappingId
        - <UUID> itemId
        - <UUID> labelId

    - ItemValueMapping
        - <UUID> mappingId
        - <UUID> itemId
        - <UUID> keyId
        - <String> value
    - StoredObject
        - <String> key
        - <String> value

Api
    - endpoints
        - ItemController
            - createItem
                - uri: /item
                - method: PUT
                - params
                    - <ItemRequest> itemRequest: requestBody
                - description: creates a new item with the given values assigned to given labels, also creates the labels and value keys if not exists
                - response: void
            - deleteByItemIds
                - uri: /item/id
                - method: DELETE
                - params
                    - <<UUID> itemId>: requestBody
                        - validation
                            - must not be null
                            - must not contain null
                - description: delete the items with the given ids.
                - response: void
            - deleteByLabelIds
                - uri: /item/label
                - method: DELETE
                - params
                    - <DeleteItemRequest> deleteItemRequest: requestBody
                - description: deletes items by label ids
                - response: void
            - getItems
                - uri: /item
                - method: POST
                - params
                    <GetItemsRequest> getItemsRequest: requestBody
                - description: returns all of the stored items filtered by details of getItemRequest
                - response: <<ItemView> itemView> itemViews
            - getRandomItem
                - uri: /item/random
                - method: POST
                - params
                    - <RandomItemRequest> randomItemRequest: identifies a pool of items the engine can select from
                - description: returns a random item from the pool identified by randomItemRequest
                - response: <ItemView> itemView
            - updateItem
                - uri: /item/{itemId}
                - method: POST
                - params
                    - <ItemRequest> itemRequest: requestBody
                    - <UUID> itemId: pathVariable
                - description: updates the given item with the given values assigned to given labels, also creates the labels and value keys if not exists
                - response: void
        - LabelController
            - deleteLabels
                - uri: /label
                - method: DELETE
                - params
                    - <<UUID> labelId>: requestBody
                        - validation
                            - must not be null
                            - must not contain null
                - description:
                    - deletes the labels (and their mappings with items) with the given labelIds.
                    - can be deleted only when there are no items with only this label
                - response: void
            - getLabel
                - uri: /label/{labelId}
                - method: GET
                - params
                    - <UUID> labelId: pathVariable
                - description: returns the label with the given labelId
                - response: <LabelView> labelView
            - getLabels
                - uri: /label
                - method: GET
                - description: returns all of the saved labels
                - response: <<LabelView> labelView> labelViews
            - updateLabel
                - uri: /label/{labelId}
                - method: POST
                - params
                    - <UUID> labelId: pathVariable
                    - <String> newValue: requestBody
                - description: updates the value of the given label.
                - response: void
        - KeyController
            - deleteKeys
                - uri: /key
                - method: DELETE
                - params
                    - <<UUID> keyId>: requestBody
                        - validation
                            - must not be null
                            - must not contain null
                - description:
                    - deletes the keys (and their mappings with items) with the given keyIds.
                    - can be deleted only when there are n items with only this key.
                - response: void
            - getKey
                - uri: /key/{keyId}
                - method: GET
                - params
                    - <UUID> keyId: pathVariable
                - description: returns the key with the given keyId
                - response: <Key> key
            - getKeys
                - uri: /key
                - method: GET
                - description: returns all the saved keys.
                - response: <<Key> key> keys
            - getKeysForLabels
                - uri: /key/label
                - method: POST
                - params
                    - <<UUID> labelId> labelIds
                - description: returns all the keys what are assigned to items belong to the given labelIds
                - response: <<Key> key> keys
            - updateKey
                - uri: /key/{keyId}
                - method: POST
                - params
                    - <UUID> keyId: pathVariable
                    - <String> newValue: requestBody
                - description: updates the value of the given key.
            - response: void
        - StoredObjectController
            - getObject
                - uri: /stored-object/{key}
                - method: GET
                - params
                    - <String> key: pathVariable
                - description: returns the stored object with the given key
                - response: <StoredObject> storedObject
            - saveObject
                - uri: /stored-object
                - method: POST
                - params
                    - <StoreObjectRequest> storeObjectRequest
                - description: saves or updates a StoredObject with the given details
                - response: void
    - request params
        - DeleteItemRequest
            - fields
                - <<UUID> labelId> labelIds
                - <<ItemDeleteMethod> deleteMethod> deleteMethod
            - validation
                - none of the fields can be null, or contain null.
        - GetItemsRequest
            - fields:
                - <String> searchByLabel: filtering items by label values. Leave empty if no filtering required
                - <String> searchByKey: filtering items by key values. Leave empty if no filtering required
                - <String> searchByValue: filtering items by column values. Leave empty if no filtering required
        - ItemDeleteMethod
            - type: enum
            - values
                - CONTAINS: delete the item if it has mapping with ANY of the labels
                - CONTAINS_ALL: delete the item if it has mapping with ALL of the labels
        - ItemRequest
            - fields
                - <<UUID> keyId = <UUID> value> existingKeyValueIds
                - <<String> keyValue = <String> value> newKeyValues
                - <<UUID> labelId> existingLabelIds
                - <<String> labelValue> newLabelValues
            - validation
                - existingKeyValueIds or newKeyValues must contain at least 1 item
                - existingLabelIds or newLabelValues must contain at least 1 item
                - existingKeyValueIds and existingLabelIds must contain valid ids
                - none of the fields can be null, or contain null.
        - RandomItemRequest
            - fields
                - <<UUID> labelId> labelIds: adds the item to the pool if the item contains any of these labels
                - <<UUID> keyId> keyIds: adds the item to the pool if the item contains any of these keys
            - validation:
                - none of the fields can be null, or contain null.
        - StoreObjectRequest
            - fields
                - <String> key
                - <String> value
            - validation:
                - key must not be null or blank, and must not be longer than 255 characters
    - responses
        - ItemView
            - fields
                - <UUID> itemId
                - <<UUID> labelId> labelIds
                - <<UUID> keyId = <String> columnValue> columns
        - LabelView
            - fields
                - <UUID> labelId
                - <String> labelValue
                - <Integer> items: number of items assigned to this label
                - <Boolean> deletable
        - Key
            - fields
                - <UUID> keyId
                - <String> keyValue
        - StoredObject
            - fields
                - <String> key
                - <String> value

FrontEnd
    - delete_items_by_label
        - select labels //TODO implement
        - select method //TODO implement
    - edit_label //TODO implement
    - view_keys
        - display number of items containing //TODO implement
        - link to view items of key (given key at first) //TODO implement
        - filter by
            - keyValue //TODO implement
        - link to edit key //TODO implement
        - delete keys //TODO implement
            - only deletable keys can be selected //TODO implement
        - select all button //TODO implement
    - edit_key //TODO implement